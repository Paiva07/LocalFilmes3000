{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\guilherme.paiva\\\\Desktop\\\\LocalFilms3000\\\\frontend\\\\app\\\\src\\\\Pages\\\\Login.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { LOGIN_USER } from '../api';\nimport Button from '../Components/Button';\nimport Input from '../Components/Input';\nimport styles from './Login.module.css';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Login = () => {\n  _s();\n\n  const [email, setEmail] = React.useState('');\n  const [password, setPassword] = React.useState('');\n  const [dados, setDados] = React.useState(null);\n  const [error, setError] = React.useState(null);\n\n  function loginAccount(email, password) {\n    const {\n      url,\n      options\n    } = LOGIN_USER({\n      email: email,\n      senha: password\n    });\n    fetch(url, options).then(response => response.json()).then(json => setDados(json));\n\n    if (dados.token !== undefined) {\n      console.log(dados.token);\n      setError(null);\n    } else {\n      setError('Usuário ou Senha incorretos');\n    }\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `animeLeft ${styles.modal}`,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginLeft\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: styles.loginRight,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: styles.container,\n        children: [' ', /*#__PURE__*/_jsxDEV(\"h1\", {\n          children: \"Sign In\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"email\",\n          id: \"login\",\n          placeholder: \"Email\",\n          onChange: _ref => {\n            let {\n              target\n            } = _ref;\n            return setEmail(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Input, {\n          type: \"password\",\n          id: \"password\",\n          placeholder: \"Password\",\n          onChange: _ref2 => {\n            let {\n              target\n            } = _ref2;\n            return setPassword(target.value);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), error && /*#__PURE__*/_jsxDEV(\"p\", {\n          children: error\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Sign In\",\n          onClick: () => loginAccount(email, password)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          children: \"New Here? Create an Account\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Login, \"WLdKvc7PfnSjphIZf7KIrelMgqA=\");\n\n_c = Login;\nexport default Login;\n\nvar _c;\n\n$RefreshReg$(_c, \"Login\");","map":{"version":3,"sources":["C:/Users/guilherme.paiva/Desktop/LocalFilms3000/frontend/app/src/Pages/Login.js"],"names":["React","LOGIN_USER","Button","Input","styles","Login","email","setEmail","useState","password","setPassword","dados","setDados","error","setError","loginAccount","url","options","senha","fetch","then","response","json","token","undefined","console","log","modal","loginLeft","loginRight","container","target","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { LOGIN_USER } from '../api';\r\nimport Button from '../Components/Button';\r\nimport Input from '../Components/Input';\r\nimport styles from './Login.module.css';\r\n\r\nconst Login = () => {\r\n  const [email, setEmail] = React.useState('');\r\n  const [password, setPassword] = React.useState('');\r\n  const [dados, setDados] = React.useState(null);\r\n  const [error, setError] = React.useState(null);\r\n\r\n  function loginAccount(email, password) {\r\n    const { url, options } = LOGIN_USER({\r\n      email: email,\r\n      senha: password,\r\n    });\r\n    fetch(url, options)\r\n      .then((response) => response.json())\r\n      .then((json) => setDados(json));\r\n\r\n    if (dados.token !== undefined) {\r\n      console.log(dados.token);\r\n      setError(null);\r\n    } else {\r\n      setError('Usuário ou Senha incorretos');\r\n    }\r\n  }\r\n\r\n  return (\r\n    <div className={`animeLeft ${styles.modal}`}>\r\n      <div className={styles.loginLeft}></div>\r\n      <div className={styles.loginRight}>\r\n        <div className={styles.container}>\r\n          {' '}\r\n          <h1>Sign In</h1>\r\n          <Input\r\n            type=\"email\"\r\n            id=\"login\"\r\n            placeholder=\"Email\"\r\n            onChange={({ target }) => setEmail(target.value)}\r\n          />\r\n          <Input\r\n            type=\"password\"\r\n            id=\"password\"\r\n            placeholder=\"Password\"\r\n            onChange={({ target }) => setPassword(target.value)}\r\n          />\r\n          {error && <p>{error}</p>}\r\n          <Button\r\n            text=\"Sign In\"\r\n            onClick={() => loginAccount(email, password)}\r\n          />\r\n          <p>New Here? Create an Account</p>\r\n        </div>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Login;\r\n"]},"metadata":{},"sourceType":"module"}